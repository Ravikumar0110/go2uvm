/********************************************
* VerifWorks Go2UVM App: VW_DVC_Go2UVM
* Automatically generated by VerifWorks's DVC_Go2UVM Riviera Apps 
* Thanks for using VerifWorks products
* Visit http://www.verifworks.com for more 
* Generated on   : 2016-06-19 17:17:28
********************************************/ 


`include "simple_protocol.sv"
`include "sprot_if.sv"

// Automatically generated from VerifWorks's DVCreate-Go2UVM product
// Thanks for using VerifWorks products, see http://www.verifworks.com for more

import uvm_pkg::*;
`include "vw_go2uvm_macros.svh"
// Import Go2UVM Package
import vw_go2uvm_pkg::*;

// Use the base class provided by the vw_go2uvm_pkg
class sprot_test extends go2uvm_base_test;
  // Create a handle to the actual interface

  // virtual sprot_if vif;
  task reset;
    `uvm_info (log_id, "Start of reset", UVM_MEDIUM)
    this.vif.reset_t();
    `uvm_info (log_id, "End of reset", UVM_MEDIUM)
  endtask : reset

  task main ();
    `uvm_info (log_id, "Start of main", UVM_MEDIUM)
    this.vif.main_t();
    `uvm_info (log_id, "End of main", UVM_MEDIUM)
  endtask : main

endclass : sprot_test

module sprot_go2uvm;
  timeunit 1ns;
  timeprecision 1ns;
  parameter VW_CLK_PERIOD = 10;

  // Simple clock generator
  bit `VW_CLK ;
  always # (VW_CLK_PERIOD/2) `VW_CLK <= ~`VW_CLK;

  // Interface instance
  sprot_if sprot_if_0 (.*);

  // Connect TB clk to Interface instance clk

  // DUT instance
  sprot sprot_0 (
    .a(sprot_if_0.a),
    .b(sprot_if_0.b),
    .rst_n(sprot_if_0.rst_n),
    .start(sprot_if_0.start),
    .prot_err(sprot_if_0.prot_err),
    .xfer_end(sprot_if_0.xfer_end)
  );


  // Using VW_Go2UVM
  sprot_test sprot_test_0;
  initial begin : go2uvm_test
    sprot_test_0 = new ();
    // Connect virtual interface to physical interface
    sprot_test_0.vif = sprot_if_0;
    // Kick start standard UVM phasing
    run_test ();
  end : go2uvm_test
endmodule : sprot_go2uvm

