// Copyright (c) 2004-2017 VerifWorks, Bangalore, India
// http://www.verifworks.com 
// Contact: support@verifworks.com 
// 
// This program is part of Go2UVM at www.go2uvm.org
// Some portions of Go2UVM are free software.
// You can redistribute it and/or modify  
// it under the terms of the GNU Lesser General Public License as   
// published by the Free Software Foundation, version 3.
//
// VerifWorks reserves the right to obfuscate part or full of the code
// at any point in time. 
// We also support a comemrical licensing option for an enhanced version
// of Go2UVM, please contact us via support@verifworks.com
//
// This program is distributed in the hope that it will be useful, but 
// WITHOUT ANY WARRANTY; without even the implied warranty of 
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
// Lesser General Lesser Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.


Requirement
------------
  // After "start_sig" goes high
  // within a variable delay of "var_del" clock cycles
  // signal "end_sig" should go high

  // start_sig |-> ##[1:var_del] end_sig

However SVA as in IEEE 1800-2012 does NOT allow variable delays in propeties/sequences. A work-around is to use local variable and count. 

In tis example we have implemented that logic inside a "checker" (a new construct in SV) and make it easy for end users.

The testbench is using UVM with Go2UVM layer on top. The benefit is that while testing an assertion/checker for propery functionality, one could predict the errors and report them with SVUnit's report-mock feature.

See go2uvm_tb_src/vw_var_del_in_sva_uvm.sv and look for expect_error API usage. We use that prediction for an intended fail trace and in the log file you will see the test still passes (as expected) despite the presence of an UVM_ERROR (again note that the test intenitonally introduces errors and expects the SVA to flag it appropriately)


Files:
------
UVM Trace --> go2uvm_tb_src/vw_var_del_in_sva_uvm.sv 
SVA code  --> sva_src/vw_var_del_in_sva.sv

To run;

cd run_dir
make cvc2 (for Questa). Other targets are available for other tools as we use a generic Makefile from: 

http://www.go2uvm.org/2016/10/generic-makefile-for-uvm-simulations/


